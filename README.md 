Chest X-Ray Pneumonia Detection System

A Deep Learning project that detects Pneumonia from Chest X-Ray images using a Convolutional Neural Network (CNN) trained with TensorFlow, and provides a user-friendly FastAPI web interface for real-time predictions.

⸻

📘 Overview

This project takes an X-ray image as input and classifies it into two categories:
	•	🟢 NORMAL — healthy lung
	•	🔴 PNEUMONIA — infection detected

The system includes:
	•	A CNN model trained on Kaggle’s “Chest X-Ray Pneumonia” dataset
	•	A FastAPI web app for predictions
	•	A Bootstrap-styled HTML interface with confidence bar and image preview

⸻

🧠 Features

✔️ Convolutional Neural Network (3+ layers)
✔️ Image augmentation and normalization
✔️ Dropout, batch normalization, and early stopping
✔️ Model saved as best_model.h5
✔️ Interactive web interface (upload and predict)
✔️ Confidence display via progress bar

⸻
🗂️ Project Structure
 
chest_xray_pneumonia_app/
│
├── app/
│   ├── main.py               # FastAPI entrypoint
│   ├── model_loader.py       # TensorFlow model loader & predictor
│   ├── templates/
│   │   └── index.html        # HTML interface
│   ├── static/
│   │   └── styles.css        # CSS styling
│   └── uploads/              # Uploaded images
│
├── models/
│   └── best_model.h5         # Trained CNN model
│
├── requirements.txt          # All dependencies
└── README.md                 # You are here

⚙️ Installation and Setup (for any computer)

Follow these steps to run the project on another machine 💻

1️⃣ Clone the repository

git clone https://github.com/yourusername/chest_xray_pneumonia_app.git
cd chest_xray_pneumonia_app

2️⃣ Create a virtual environment
 
 Mac/Linux:
python3 -m venv venv
source venv/bin/activate

Windows (PowerShell):
python -m venv venv
venv\Scripts\activate

3️⃣ Install dependencies
Make sure you have Python 3.10 or newer installed, then run:
pip install -r requirements.txt

🧩 Run the Web App
	1.	Go inside the app directory:
    cd app
    2.	Start the FastAPI server:
    uvicorn main:app --reload
    3.	You’ll see:
    Uvicorn running on http://127.0.0.1:8000
    4.	Open your browser and visit:
👉 http://127.0.0.1:8000

🖼️ How to Use
	1.	Upload a Chest X-Ray image (.jpg or .png) using the upload button.
	2.	Click “Predict”.
	3.	The app will display:
	•	The uploaded image
	•	Predicted class (NORMAL / PNEUMONIA)
	•	Model confidence (as a percentage bar)

⸻

🧠 Model Information
	•	Framework: TensorFlow / Keras
	•	Input size: 224×224×3 RGB
	•	Architecture:
	•	Conv2D → ReLU → MaxPooling → BatchNorm
	•	Dropout layers to reduce overfitting
	•	Dense layers + Softmax output
	•	Optimizer: Adam
	•	Performance: ~90% accuracy on validation set

⸻

📦 Requirements

Your Python environment must include the following libraries (already listed in requirements.txt):

tensorflow==2.17.0
fastapi==0.115.0
uvicorn==0.30.0
jinja2==3.1.3
python-multipart==0.0.9
pillow==10.4.0
numpy==1.26.4
pandas==2.2.2
scikit-learn==1.5.0
matplotlib==3.9.0
seaborn==0.13.2
tqdm==4.66.4

👨‍💻 Author

Your Name
📧 your.email@example.com
🌐 GitHub: https://github.com/yourusername

⸻

📜 License

MIT License © 2025
Use freely for learning, research, or non-commercial purposes.

